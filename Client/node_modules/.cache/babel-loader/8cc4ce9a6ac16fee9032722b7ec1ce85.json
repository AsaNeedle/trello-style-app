{"ast":null,"code":"var _jsxFileName = \"/Users/asaneedle/Documents/Coding Projects/my-app/Client/src/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport isEquivalent from './utils/isequivalent';\nimport './Home.css';\nimport TestPage from './TestPage.js';\n\nfunction Home() {\n  const [isPersist, setIsPersist] = useState(false);\n  const [dropColumn, setDropColumn] = useState(false);\n  const [tickets, setTickets] = useState([{\n    id: 0,\n    content: \"\",\n    done: false\n  }, {\n    id: 1,\n    content: \"\",\n    done: false\n  }, {\n    id: 2,\n    content: \"\",\n    done: true\n  }, {\n    id: 3,\n    content: \"\",\n    done: false\n  }, {\n    id: 4,\n    content: \"\",\n    done: true\n  }, {\n    id: 5,\n    content: \"\",\n    done: false\n  }, {\n    id: 6,\n    content: \"\",\n    done: true\n  }, {\n    id: 7,\n    content: \"\",\n    done: false\n  }, {\n    id: 8,\n    content: \"\",\n    done: true\n  }, {\n    id: 9,\n    content: \"\",\n    done: false\n  }, {\n    id: 10,\n    content: \"\",\n    done: false\n  }, {\n    id: 11,\n    content: \"\",\n    done: true\n  }]);\n  const [columns, setColumns] = useState([{\n    id: 0,\n    title: \"Languages to learn\",\n    tickets: [0, 1, 2, 3]\n  }, {\n    id: 1,\n    title: \"Boroughs to explore\",\n    tickets: [4, 5, 6, 7, 8]\n  }, {\n    id: 2,\n    title: \"Cats to pet\",\n    tickets: [9, 10, 11]\n  }]);\n  useEffect(() => {\n    async function effectFunction() {\n      const response = await fetch('/tickets');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      setTickets(state => state.concat(body));\n      setTickets(state => state.slice(12));\n    }\n\n    ;\n    effectFunction();\n  }, []); // function DisplayInput (props) {\n  //   const displayInput = props.displayInput\n  //   if (displayInput){\n  //     return <TicketForm />\n  //   } else {\n  //     return null\n  //   }\n  // }\n\n  const updatePersistData = data => {\n    return;\n    localStorage.setItem('myData', JSON.stringify(data));\n  };\n\n  const dragStart = e => {\n    e.dataTransfer.setData(\"TicketId\", e.target.id);\n  };\n\n  const dragging = e => {\n    return;\n  };\n\n  const allowDrop = e => {\n    e.preventDefault(); // if (e === dropColumn){\n    //   return\n    // }\n    // const originId = e.dataTransfer.getData(\"OriginId\")\n    // if (e.target.getAttribute(\"class\") === \"column\"){\n    //   if (e.target.id !== originId){\n    //     setDropColumn(e)\n    //   } else {\n    //     setDropColumn(false)\n    //   }\n    // }\n  };\n\n  const drop = e => {\n    e.preventDefault();\n    const ticketId = parseInt(e.dataTransfer.getData(\"TicketId\"));\n    const ticketName = tickets[ticketId].content;\n    const originId = columns.find(x => x.tickets.includes(ticketId))[\"id\"];\n\n    if (e.target.getAttribute(\"class\") === \"column\" && e.target.id != originId) {\n      let newColumns = moveTicket(e.target.id, ticketId, ticketName, columns);\n      setColumns(newColumns);\n      updatePersistData(newColumns);\n    }\n  };\n\n  const moveTicket = (colId, ticketId, val, columns) => {\n    const newColumns = columns.map(col => {\n      // removes ticket from origin\n      if (col.tickets.includes(ticketId)) {\n        let srcCol = {\n          id: col.id,\n          title: col.title,\n          tickets: col.tickets.filter(x => x != ticketId)\n        };\n        return srcCol;\n      } // add ticket to destination\n\n\n      if (col.id == colId) {\n        const destCol = {\n          id: col.id,\n          title: col.title,\n          tickets: [...col.tickets, ticketId]\n        };\n        return destCol;\n      } else {\n        return col;\n      }\n    });\n    return newColumns;\n  };\n\n  const addTicket = (id, val, columns, tickets) => {\n    const newTicketId = tickets.length;\n    const newTickets = [...tickets, {\n      id: newTicketId,\n      content: val,\n      done: false\n    }];\n    const newColumns = columns.map(col => {\n      if (col.id === id) {\n        return {\n          id: col.id,\n          title: col.title,\n          tickets: [...col.tickets, newTicketId]\n        };\n      } else {\n        return col;\n      }\n    });\n    return [newColumns, newTickets];\n  }; // deprecated?\n\n\n  const removeTicket = (origin, val, state) => {\n    const newColumns = state.map(col => {\n      if (col.title === origin) {\n        return {\n          title: col.title,\n          tickets: col.tickets.filter(t => {\n            return t.content !== val;\n          })\n        };\n      } else {\n        return col;\n      }\n    });\n    return newColumns;\n  };\n\n  const removeColumn = id => {\n    const newColumns = columns.filter(column => column.id !== id);\n    setColumns(newColumns);\n    updatePersistData(newColumns);\n  };\n\n  class Ticket extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.toggleDone = () => {\n        this.setState({\n          done: !this.state.done\n        });\n      };\n\n      this.state = {\n        text: props.text,\n        index: props.index,\n        id: props.id,\n        done: false\n      };\n    }\n\n    render() {\n      return React.createElement(\"div\", {\n        className: \"ticket\",\n        name: this.props.column,\n        id: this.state.id,\n        index: this.state.index,\n        draggable: \"true\",\n        onDragStart: dragStart,\n        onDrag: dragging,\n        style: this.state.done ? {\n          textDecoration: \"line-through\"\n        } : {},\n        onClick: this.toggleDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"\\xa0\" + this.state.text);\n    }\n\n  }\n\n  class TicketColumn extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        items: props.items,\n        title: props.title,\n        id: props.id\n      };\n    }\n\n    render() {\n      return React.createElement(\"div\", {\n        className: \"panel\",\n        id: this.state.id,\n        onDrop: drop,\n        onDragOver: allowDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"\\xa0\" + this.state.title)), React.createElement(\"button\", {\n        onClick: () => {\n          removeColumn(this.state.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), this.state.items.map((item, i) => {\n        return React.createElement(Ticket, {\n          key: i,\n          column: this.state.id,\n          index: item.id,\n          done: item.done,\n          id: item.id,\n          text: item.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        });\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"^^^Drag here to add!^^^\"), React.createElement(TicketForm, {\n        id: this.state.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  class Workspace extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        columns: props.columns,\n        tickets: props.tickets\n      };\n    }\n\n    componentDidMount() {\n      const persistedData = JSON.parse(localStorage.getItem('myData' || null));\n\n      if (persistedData && !isPersist & !isEquivalent(columns, persistedData)) {\n        setColumns(persistedData);\n        setIsPersist(true);\n      }\n    }\n\n    render() {\n      const {\n        columns\n      } = this.props;\n      const {\n        tickets\n      } = this.props;\n      return React.createElement(\"div\", {\n        className: \"flex-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, columns.map((column, i) => {\n        return React.createElement(TicketColumn, {\n          key: i,\n          items: column.tickets.map(id => tickets[id]),\n          title: column.title,\n          id: column.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        });\n      }), React.createElement(ColumnForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  class TicketForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: '',\n        id: props.id\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n\n    handleSubmit(event) {\n      if (this.state.value !== \"\") {\n        const res = addTicket(this.state.id, this.state.value, columns, tickets);\n        const newColumns = res[0];\n        const newTickets = res[1];\n        setColumns(newColumns);\n        setTickets(newTickets);\n        updatePersistData(newColumns);\n      }\n\n      event.preventDefault();\n    }\n\n    render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"tkt-input\",\n        type: \"text\",\n        placeholder: \"Add new dream :)\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"input-tkt-btn\",\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  class ColumnForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        id: columns.length,\n        value: ''\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n\n    handleSubmit(event) {\n      if (this.state.value !== \"\") {\n        const newColumns = [...columns, {\n          id: this.state.id,\n          title: this.state.value,\n          tickets: []\n        }];\n        setColumns(newColumns);\n      }\n\n      event.preventDefault();\n    }\n\n    render() {\n      return React.createElement(\"form\", {\n        className: \"column\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"col-input\",\n        type: \"text\",\n        placeholder: \"Add new dream list\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"input-col-btn\",\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"display-1\",\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, \"Hacker Dreams\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, \"Don't let your dreams be dreams, hackers.\"), React.createElement(Workspace, {\n    columns: columns,\n    tickets: tickets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }), React.createElement(TestPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/asaneedle/Documents/Coding Projects/my-app/Client/src/Home.js"],"names":["React","useState","useEffect","Button","isEquivalent","TestPage","Home","isPersist","setIsPersist","dropColumn","setDropColumn","tickets","setTickets","id","content","done","columns","setColumns","title","effectFunction","response","fetch","body","json","status","Error","message","state","concat","slice","updatePersistData","data","localStorage","setItem","JSON","stringify","dragStart","e","dataTransfer","setData","target","dragging","allowDrop","preventDefault","drop","ticketId","parseInt","getData","ticketName","originId","find","x","includes","getAttribute","newColumns","moveTicket","colId","val","map","col","srcCol","filter","destCol","addTicket","newTicketId","length","newTickets","removeTicket","origin","t","removeColumn","column","Ticket","Component","constructor","props","toggleDone","setState","text","index","render","textDecoration","TicketColumn","items","item","i","Workspace","componentDidMount","persistedData","parse","getItem","TicketForm","value","handleChange","bind","handleSubmit","event","res","ColumnForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CACpC,CACA;AAACY,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GADA,EAEA;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAFA,EAGA;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAHA,EAIA;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAJA,EAKA;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GALA,EAMA;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GANA,EAOA;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAPA,EAQA;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GARA,EASA;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GATA,EAUA;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,EAAjB;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAVA,EAWA;AAACF,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,OAAO,EAAE,EAAlB;AAAsBC,IAAAA,IAAI,EAAE;AAA5B,GAXA,EAYA;AAACF,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,OAAO,EAAE,EAAlB;AAAsBC,IAAAA,IAAI,EAAE;AAA5B,GAZA,CADoC,CAAtC;AAiBA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,CACrC;AACEY,IAAAA,EAAE,EAAE,CADN;AAEEK,IAAAA,KAAK,EAAE,oBAFT;AAGEP,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAHX,GADqC,EAMrC;AACEE,IAAAA,EAAE,EAAE,CADN;AAEEK,IAAAA,KAAK,EAAE,qBAFT;AAGEP,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAHX,GANqC,EAWrC;AACEE,IAAAA,EAAE,EAAE,CADN;AAEEK,IAAAA,KAAK,EAAE,aAFT;AAGEP,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAHX,GAXqC,CAAD,CAAtC;AAiBAT,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeiB,cAAf,GAA+B;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAC7Bd,MAAAA,UAAU,CAAEe,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaN,IAAb,CAAZ,CAAV;AACAV,MAAAA,UAAU,CAAEe,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAY,EAAZ,CAAZ,CAAV;AACD;;AAAA;AACDV,IAAAA,cAAc;AACf,GATQ,EASN,EATM,CAAT,CArCc,CAgDd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMW,iBAAiB,GAAIC,IAAD,IAAU;AAClC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA/B;AACD,GAHD;;AAKA,QAAMK,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,YAAF,CAAeC,OAAf,CAAuB,UAAvB,EAAmCF,CAAC,CAACG,MAAF,CAAS3B,EAA5C;AACD,GAFD;;AAGA,QAAM4B,QAAQ,GAAIJ,CAAD,IAAO;AACtB;AACD,GAFD;;AAGA,QAAMK,SAAS,GAAIL,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACM,cAAF,GADuB,CAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAbD;;AAeA,QAAMC,IAAI,GAAIP,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACM,cAAF;AACA,UAAME,QAAQ,GAAGC,QAAQ,CAACT,CAAC,CAACC,YAAF,CAAeS,OAAf,CAAuB,UAAvB,CAAD,CAAzB;AACA,UAAMC,UAAU,GAAGrC,OAAO,CAACkC,QAAD,CAAP,CAAkB/B,OAArC;AACA,UAAMmC,QAAQ,GAAGjC,OAAO,CAACkC,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACxC,OAAF,CAAUyC,QAAV,CAAmBP,QAAnB,CAAlB,EAAgD,IAAhD,CAAjB;;AACA,QAAIR,CAAC,CAACG,MAAF,CAASa,YAAT,CAAsB,OAAtB,MAAmC,QAAnC,IAA+ChB,CAAC,CAACG,MAAF,CAAS3B,EAAT,IAAeoC,QAAlE,EAA2E;AACzE,UAAIK,UAAU,GAAGC,UAAU,CAAClB,CAAC,CAACG,MAAF,CAAS3B,EAAV,EAAcgC,QAAd,EAAwBG,UAAxB,EAAoChC,OAApC,CAA3B;AACAC,MAAAA,UAAU,CAACqC,UAAD,CAAV;AACAxB,MAAAA,iBAAiB,CAACwB,UAAD,CAAjB;AACD;AACF,GAVD;;AAYA,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAQX,QAAR,EAAkBY,GAAlB,EAAuBzC,OAAvB,KAAmC;AACpD,UAAMsC,UAAU,GAAGtC,OAAO,CAAC0C,GAAR,CAAaC,GAAD,IAAS;AACtC;AACA,UAAIA,GAAG,CAAChD,OAAJ,CAAYyC,QAAZ,CAAqBP,QAArB,CAAJ,EAAmC;AACjC,YAAIe,MAAM,GAAG;AACX/C,UAAAA,EAAE,EAAE8C,GAAG,CAAC9C,EADG;AAEXK,UAAAA,KAAK,EAAEyC,GAAG,CAACzC,KAFA;AAGXP,UAAAA,OAAO,EAAEgD,GAAG,CAAChD,OAAJ,CAAYkD,MAAZ,CAAmBV,CAAC,IAAIA,CAAC,IAAIN,QAA7B;AAHE,SAAb;AAKA,eAAOe,MAAP;AACD,OATqC,CAUtC;;;AACA,UAAID,GAAG,CAAC9C,EAAJ,IAAU2C,KAAd,EAAqB;AACnB,cAAMM,OAAO,GAAG;AACdjD,UAAAA,EAAE,EAAE8C,GAAG,CAAC9C,EADM;AAEdK,UAAAA,KAAK,EAAEyC,GAAG,CAACzC,KAFG;AAGdP,UAAAA,OAAO,EAAE,CAAC,GAAGgD,GAAG,CAAChD,OAAR,EAAiBkC,QAAjB;AAHK,SAAhB;AAKA,eAAOiB,OAAP;AACD,OAPD,MAOO;AACL,eAAOH,GAAP;AACD;AACF,KArBkB,CAAnB;AAsBA,WAAOL,UAAP;AACD,GAxBD;;AA0BA,QAAMS,SAAS,GAAG,CAAClD,EAAD,EAAK4C,GAAL,EAAUzC,OAAV,EAAmBL,OAAnB,KAA+B;AAC/C,UAAMqD,WAAW,GAAGrD,OAAO,CAACsD,MAA5B;AACA,UAAMC,UAAU,GAAG,CAAC,GAAGvD,OAAJ,EAAa;AAACE,MAAAA,EAAE,EAAEmD,WAAL;AAAkBlD,MAAAA,OAAO,EAAE2C,GAA3B;AAAgC1C,MAAAA,IAAI,EAAE;AAAtC,KAAb,CAAnB;AACA,UAAMuC,UAAU,GAAGtC,OAAO,CAAC0C,GAAR,CAAaC,GAAD,IAAS;AACtC,UAAIA,GAAG,CAAC9C,EAAJ,KAAWA,EAAf,EAAmB;AACjB,eAAO;AACCA,UAAAA,EAAE,EAAE8C,GAAG,CAAC9C,EADT;AAECK,UAAAA,KAAK,EAAEyC,GAAG,CAACzC,KAFZ;AAGCP,UAAAA,OAAO,EAAE,CAAC,GAAGgD,GAAG,CAAChD,OAAR,EAAiBqD,WAAjB;AAHV,SAAP;AAKD,OAND,MAMO;AACL,eAAOL,GAAP;AACD;AACF,KAVkB,CAAnB;AAWA,WAAO,CAACL,UAAD,EAAaY,UAAb,CAAP;AACD,GAfD,CA1Hc,CA2IhB;;;AACE,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASX,GAAT,EAAc9B,KAAd,KAAwB;AAC3C,UAAM2B,UAAU,GAAG3B,KAAK,CAAC+B,GAAN,CAAWC,GAAD,IAAS;AACpC,UAAIA,GAAG,CAACzC,KAAJ,KAAckD,MAAlB,EAA0B;AACxB,eAAO;AACClD,UAAAA,KAAK,EAAEyC,GAAG,CAACzC,KADZ;AAECP,UAAAA,OAAO,EAAEgD,GAAG,CAAChD,OAAJ,CAAYkD,MAAZ,CAAoBQ,CAAD,IAAO;AACjC,mBAAOA,CAAC,CAACvD,OAAF,KAAc2C,GAArB;AACD,WAFQ;AAFV,SAAP;AAMD,OAPD,MAOO;AACL,eAAOE,GAAP;AACD;AACF,KAXkB,CAAnB;AAYA,WAAOL,UAAP;AACD,GAdD;;AAgBA,QAAMgB,YAAY,GAAIzD,EAAD,IAAQ;AAC3B,UAAMyC,UAAU,GAAGtC,OAAO,CAAC6C,MAAR,CAAgBU,MAAD,IAAYA,MAAM,CAAC1D,EAAP,KAAcA,EAAzC,CAAnB;AACAI,IAAAA,UAAU,CAACqC,UAAD,CAAV;AACAxB,IAAAA,iBAAiB,CAACwB,UAAD,CAAjB;AACD,GAJD;;AAMA,QAAMkB,MAAN,SAAqBxE,KAAK,CAACyE,SAA3B,CAAqC;AACnCC,IAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,YAAMA,KAAN;;AADgB,WAUlBC,UAVkB,GAUL,MAAM;AACjB,aAAKC,QAAL,CAAc;AAAC9D,UAAAA,IAAI,EAAE,CAAC,KAAKY,KAAL,CAAWZ;AAAnB,SAAd;AACD,OAZiB;;AAEhB,WAAKY,KAAL,GAAW;AACTmD,QAAAA,IAAI,EAAEH,KAAK,CAACG,IADH;AAETC,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAFJ;AAGTlE,QAAAA,EAAE,EAAE8D,KAAK,CAAC9D,EAHD;AAITE,QAAAA,IAAI,EAAE;AAJG,OAAX;AAMD;;AAMDiE,IAAAA,MAAM,GAAE;AACN,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AACK,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWJ,MADtB;AAEK,QAAA,EAAE,EAAE,KAAK5C,KAAL,CAAWd,EAFpB;AAGK,QAAA,KAAK,EAAE,KAAKc,KAAL,CAAWoD,KAHvB;AAIK,QAAA,SAAS,EAAC,MAJf;AAKK,QAAA,WAAW,EAAE3C,SALlB;AAMK,QAAA,MAAM,EAAEK,QANb;AAOK,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWZ,IAAX,GAAkB;AAAEkE,UAAAA,cAAc,EAAE;AAAlB,SAAlB,GAAuD,EAPnE;AAOuE,QAAA,OAAO,EAAE,KAAKL,UAPrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,SAAS,KAAKjD,KAAL,CAAWmD,IARvB,CADF;AAYD;;AA5BkC;;AA+BrC,QAAMI,YAAN,SAA2BlF,KAAK,CAACyE,SAAjC,CAA2C;AACzCC,IAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,YAAMA,KAAN;AACA,WAAKhD,KAAL,GAAa;AAACwD,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAd;AAAqBjE,QAAAA,KAAK,EAAEyD,KAAK,CAACzD,KAAlC;AAAyCL,QAAAA,EAAE,EAAE8D,KAAK,CAAC9D;AAAnD,OAAb;AACD;;AACDmE,IAAAA,MAAM,GAAE;AACN,aAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AACK,QAAA,EAAE,EAAE,KAAKrD,KAAL,CAAWd,EADpB;AAEK,QAAA,MAAM,EAAE+B,IAFb;AAGK,QAAA,UAAU,EAAEF,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,SAAS,KAAKf,KAAL,CAAWT,KAAxB,CAA/B,CAJA,EAKA;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACoD,UAAAA,YAAY,CAAC,KAAK3C,KAAL,CAAWd,EAAZ,CAAZ;AAA4B,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,EAOC,KAAKc,KAAL,CAAWwD,KAAX,CAAiBzB,GAAjB,CAAqB,CAAC0B,IAAD,EAAOC,CAAP,KAAa;AACjC,eAAO,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,CAAb;AAAgB,UAAA,MAAM,EAAE,KAAK1D,KAAL,CAAWd,EAAnC;AACgB,UAAA,KAAK,EAAEuE,IAAI,CAACvE,EAD5B;AAEgB,UAAA,IAAI,EAAEuE,IAAI,CAACrE,IAF3B;AAGgB,UAAA,EAAE,EAAEqE,IAAI,CAACvE,EAHzB;AAIgB,UAAA,IAAI,EAAEuE,IAAI,CAACtE,OAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,OANA,CAPD,EAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdA,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBA,EAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAjBA,EAkBA,oBAAC,UAAD;AAAY,QAAA,EAAE,EAAE,KAAKa,KAAL,CAAWd,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBA,CAFF;AAuBD;;AA7BwC;;AAgC3C,QAAMyE,SAAN,SAAwBtF,KAAK,CAACyE,SAA9B,CAAwC;AACtCC,IAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,YAAMA,KAAN;AACA,WAAKhD,KAAL,GAAa;AAACX,QAAAA,OAAO,EAAE2D,KAAK,CAAC3D,OAAhB;AAAyBL,QAAAA,OAAO,EAAEgE,KAAK,CAAChE;AAAxC,OAAb;AACD;;AACD4E,IAAAA,iBAAiB,GAAE;AACjB,YAAMC,aAAa,GAAGtD,IAAI,CAACuD,KAAL,CAAWzD,YAAY,CAAC0D,OAAb,CAAqB,YAAY,IAAjC,CAAX,CAAtB;;AACA,UAAIF,aAAa,IAAI,CAACjF,SAAD,GAAa,CAACH,YAAY,CAACY,OAAD,EAAUwE,aAAV,CAA/C,EAAwE;AACtEvE,QAAAA,UAAU,CAACuE,aAAD,CAAV;AACAhF,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF;;AACDwE,IAAAA,MAAM,GAAE;AACN,YAAM;AAAEhE,QAAAA;AAAF,UAAc,KAAK2D,KAAzB;AACA,YAAM;AAAEhE,QAAAA;AAAF,UAAc,KAAKgE,KAAzB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE3D,OAAO,CAAC0C,GAAR,CAAY,CAACa,MAAD,EAASc,CAAT,KAAe;AACzB,eAAO,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEA,CAAnB;AACc,UAAA,KAAK,EAAEd,MAAM,CAAC5D,OAAP,CAAe+C,GAAf,CAAoB7C,EAAD,IAAQF,OAAO,CAACE,EAAD,CAAlC,CADrB;AAEc,UAAA,KAAK,EAAE0D,MAAM,CAACrD,KAF5B;AAGc,UAAA,EAAE,EAAEqD,MAAM,CAAC1D,EAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,OALD,CADF,EAQA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,CADF;AAYD;;AA3BqC;;AA8BxC,QAAM8E,UAAN,SAAyB3F,KAAK,CAACyE,SAA/B,CAAyC;AAEvCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKhD,KAAL,GAAa;AAACiE,QAAAA,KAAK,EAAE,EAAR;AAAY/E,QAAAA,EAAE,EAAE8D,KAAK,CAAC9D;AAAtB,OAAb;AACA,WAAKgF,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,WAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,IAAAA,YAAY,CAACG,KAAD,EAAO;AACjB,WAAKnB,QAAL,CAAc;AAACe,QAAAA,KAAK,EAAEI,KAAK,CAACxD,MAAN,CAAaoD;AAArB,OAAd;AACD;;AAEDG,IAAAA,YAAY,CAACC,KAAD,EAAO;AACjB,UAAI,KAAKrE,KAAL,CAAWiE,KAAX,KAAqB,EAAzB,EAA4B;AAC1B,cAAMK,GAAG,GAAGlC,SAAS,CAAC,KAAKpC,KAAL,CAAWd,EAAZ,EAAgB,KAAKc,KAAL,CAAWiE,KAA3B,EAAkC5E,OAAlC,EAA2CL,OAA3C,CAArB;AACA,cAAM2C,UAAU,GAAG2C,GAAG,CAAC,CAAD,CAAtB;AACA,cAAM/B,UAAU,GAAG+B,GAAG,CAAC,CAAD,CAAtB;AACAhF,QAAAA,UAAU,CAACqC,UAAD,CAAV;AACA1C,QAAAA,UAAU,CAACsD,UAAD,CAAV;AACApC,QAAAA,iBAAiB,CAACwB,UAAD,CAAjB;AACD;;AACD0C,MAAAA,KAAK,CAACrD,cAAN;AACD;;AAEDqC,IAAAA,MAAM,GAAG;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKe,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,WAAW,EAAC,kBAArD;AAAwE,QAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWiE,KAA1F;AAAiG,QAAA,QAAQ,EAAE,KAAKC,YAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAA8C,QAAA,KAAK,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;AAlCsC;;AAqCzC,QAAMK,UAAN,SAAyBlG,KAAK,CAACyE,SAA/B,CAAyC;AAEvCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKhD,KAAL,GAAa;AAACd,QAAAA,EAAE,EAAEG,OAAO,CAACiD,MAAb;AAAqB2B,QAAAA,KAAK,EAAE;AAA5B,OAAb;AACA,WAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,WAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,IAAAA,YAAY,CAACG,KAAD,EAAO;AACjB,WAAKnB,QAAL,CAAc;AAACe,QAAAA,KAAK,EAAEI,KAAK,CAACxD,MAAN,CAAaoD;AAArB,OAAd;AACD;;AAEDG,IAAAA,YAAY,CAACC,KAAD,EAAO;AACjB,UAAI,KAAKrE,KAAL,CAAWiE,KAAX,KAAqB,EAAzB,EAA4B;AAC1B,cAAMtC,UAAU,GAAG,CAAC,GAAGtC,OAAJ,EAAa;AAC9BH,UAAAA,EAAE,EAAE,KAAKc,KAAL,CAAWd,EADe;AAE9BK,UAAAA,KAAK,EAAE,KAAKS,KAAL,CAAWiE,KAFY;AAG9BjF,UAAAA,OAAO,EAAE;AAHqB,SAAb,CAAnB;AAKAM,QAAAA,UAAU,CAACqC,UAAD,CAAV;AACD;;AACD0C,MAAAA,KAAK,CAACrD,cAAN;AACD;;AAEDqC,IAAAA,MAAM,GAAG;AACP,aACE;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,QAAQ,EAAE,KAAKe,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,WAAW,EAAC,oBAArD;AAA0E,QAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWiE,KAA5F;AAAmG,QAAA,QAAQ,EAAE,KAAKC,YAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,KAAK,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;AAlCsC;;AAoCzC,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,EAAE,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE7E,OAApB;AAA6B,IAAA,OAAO,EAAEL,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAQD;;AAGD,eAAeL,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport isEquivalent from './utils/isequivalent'\nimport './Home.css';\nimport TestPage from './TestPage.js'\n\nfunction Home() {\n  const [isPersist, setIsPersist] = useState(false)\n  const [dropColumn, setDropColumn] = useState(false)\n  const [tickets, setTickets] = useState(\n    [\n    {id: 0, content: \"\", done: false},\n    {id: 1, content: \"\", done: false},\n    {id: 2, content: \"\", done: true},\n    {id: 3, content: \"\", done: false},\n    {id: 4, content: \"\", done: true},\n    {id: 5, content: \"\", done: false},\n    {id: 6, content: \"\", done: true},\n    {id: 7, content: \"\", done: false},\n    {id: 8, content: \"\", done: true},\n    {id: 9, content: \"\", done: false},\n    {id: 10, content: \"\", done: false},\n    {id: 11, content: \"\", done: true}\n  ]\n  )\n\n  const [columns, setColumns] = useState([\n    {\n      id: 0,\n      title: \"Languages to learn\",\n      tickets: [0, 1, 2, 3]\n    },\n    {\n      id: 1,\n      title: \"Boroughs to explore\",\n      tickets: [4, 5, 6, 7, 8]\n    },\n    {\n      id: 2,\n      title: \"Cats to pet\",\n      tickets: [9, 10, 11]\n    }\n  ])\n  useEffect(() => {\n    async function effectFunction(){\n      const response = await fetch('/tickets');\n      const body = await response.json()\n      if (response.status !== 200) throw Error(body.message);\n      setTickets((state) => state.concat(body))\n      setTickets((state) => state.slice(12))\n    };\n    effectFunction() \n  }, []);\n\n  // function DisplayInput (props) {\n  //   const displayInput = props.displayInput\n  //   if (displayInput){\n  //     return <TicketForm />\n  //   } else {\n  //     return null\n  //   }\n  // }\n\n\n  const updatePersistData = (data) => {\n    return\n    localStorage.setItem('myData', JSON.stringify(data))\n  }\n\n  const dragStart = (e) => {\n    e.dataTransfer.setData(\"TicketId\", e.target.id)\n  }\n  const dragging = (e) => {\n    return\n  }\n  const allowDrop = (e) => { \n    e.preventDefault();\n    // if (e === dropColumn){\n    //   return\n    // }\n    // const originId = e.dataTransfer.getData(\"OriginId\")\n    // if (e.target.getAttribute(\"class\") === \"column\"){\n    //   if (e.target.id !== originId){\n    //     setDropColumn(e)\n    //   } else {\n    //     setDropColumn(false)\n    //   }\n    // }\n  }\n\n  const drop = (e) => {\n    e.preventDefault();\n    const ticketId = parseInt(e.dataTransfer.getData(\"TicketId\"))\n    const ticketName = tickets[ticketId].content\n    const originId = columns.find(x => x.tickets.includes(ticketId))[\"id\"]\n    if (e.target.getAttribute(\"class\") === \"column\" && e.target.id != originId){ \n      let newColumns = moveTicket(e.target.id, ticketId, ticketName, columns)\n      setColumns(newColumns)\n      updatePersistData(newColumns)\n    }\n  }\n\n  const moveTicket = (colId, ticketId, val, columns) => {\n    const newColumns = columns.map((col) => {\n      // removes ticket from origin\n      if (col.tickets.includes(ticketId)){\n        let srcCol = {\n          id: col.id,\n          title: col.title,\n          tickets: col.tickets.filter(x => x != ticketId)\n        }\n        return srcCol\n      }\n      // add ticket to destination\n      if (col.id == colId) {\n        const destCol = {\n          id: col.id,\n          title: col.title, \n          tickets: [...col.tickets, ticketId]\n        }\n        return destCol\n      } else {\n        return col\n      }\n    });\n    return newColumns\n  }\n\n  const addTicket = (id, val, columns, tickets) => {\n    const newTicketId = tickets.length\n    const newTickets = [...tickets, {id: newTicketId, content: val, done: false}]\n    const newColumns = columns.map((col) => {\n      if (col.id === id) {\n        return {\n                id: col.id,\n                title: col.title, \n                tickets: [...col.tickets, newTicketId]\n              }   \n      } else {\n        return col\n      }\n    });\n    return [newColumns, newTickets]\n  }\n\n// deprecated?\n  const removeTicket = (origin, val, state) => {\n    const newColumns = state.map((col) => {\n      if (col.title === origin) {\n        return {\n                title: col.title, \n                tickets: col.tickets.filter((t) => {\n                  return t.content !== val\n                })\n              }   \n      } else {\n        return col\n      }\n    });\n    return newColumns\n  }\n\n  const removeColumn = (id) => {\n    const newColumns = columns.filter((column) => column.id !== id);\n    setColumns(newColumns)\n    updatePersistData(newColumns)\n  }\n\n  class Ticket extends React.Component {\n    constructor(props){\n      super(props)\n      this.state={\n        text: props.text,\n        index: props.index,\n        id: props.id,\n        done: false\n      }\n    }\n\n    toggleDone = () => {\n      this.setState({done: !this.state.done}) \n    }\n\n    render(){\n      return (\n        <div className=\"ticket\"\n             name={this.props.column}\n             id={this.state.id}\n             index={this.state.index}\n             draggable=\"true\"\n             onDragStart={dragStart}\n             onDrag={dragging}\n             style={this.state.done ? { textDecoration: \"line-through\" } : {}} onClick={this.toggleDone}>\n          {\"\\xa0\" + this.state.text} \n        </div>\n      )\n    }\n  }\n\n  class TicketColumn extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {items: props.items, title: props.title, id: props.id}\n    }\n    render(){\n      return (\n        \n        <div className=\"panel\"\n             id={this.state.id}\n             onDrop={drop}\n             onDragOver={allowDrop}>\n        <div className=\"panel-heading\"><b>{\"\\xa0\" + this.state.title}</b></div>\n        <button onClick={() => {removeColumn(this.state.id)}}>X</button>\n        <br/>\n        {this.state.items.map((item, i) => { \n          return <Ticket key={i} column={this.state.id} \n                                 index={item.id} \n                                 done={item.done} \n                                 id={item.id}\n                                 text={item.content}/>\n        })}\n        <br/>\n        <br/>\n        <br/>\n        <div>^^^Drag here to add!^^^</div>\n        <TicketForm id={this.state.id}/>\n        </div>\n      )\n    }\n  }\n\n  class Workspace extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {columns: props.columns, tickets: props.tickets}\n    }\n    componentDidMount(){\n      const persistedData = JSON.parse(localStorage.getItem('myData' || null))\n      if (persistedData && !isPersist & !isEquivalent(columns, persistedData)){\n        setColumns(persistedData)\n        setIsPersist(true)\n      }\n    }\n    render(){\n      const { columns } = this.props\n      const { tickets } = this.props\n      return(\n        <div className=\"flex-container\">\n        { columns.map((column, i) => {\n            return <TicketColumn key={i} \n                                 items={column.tickets.map((id) => tickets[id])} \n                                 title={column.title} \n                                 id={column.id}/>\n          })\n        }\n        <ColumnForm />\n        </div>\n      )\n    }\n  }\n\n  class TicketForm extends React.Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {value: '', id: props.id}\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n      this.setState({value: event.target.value})\n    }\n\n    handleSubmit(event){\n      if (this.state.value !== \"\"){\n        const res = addTicket(this.state.id, this.state.value, columns, tickets)\n        const newColumns = res[0]\n        const newTickets = res[1]\n        setColumns(newColumns)\n        setTickets(newTickets)\n        updatePersistData(newColumns)\n      } \n      event.preventDefault();\n    }\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <input className=\"tkt-input\" type=\"text\" placeholder=\"Add new dream :)\" value={this.state.value} onChange={this.handleChange}/>\n          </label>\n          <input className=\"input-tkt-btn\"type=\"submit\" value=\"Submit\" />\n        </form>\n      );\n    }\n  }\n\n  class ColumnForm extends React.Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {id: columns.length, value: ''}\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n      this.setState({value: event.target.value})\n    }\n\n    handleSubmit(event){\n      if (this.state.value !== \"\"){\n        const newColumns = [...columns, {\n          id: this.state.id,\n          title: this.state.value,\n          tickets: []\n        }]\n        setColumns(newColumns);\n      }\n      event.preventDefault();\n    }\n\n    render() {\n      return (\n        <form className=\"column\" onSubmit={this.handleSubmit}>\n          <label>\n            <input className=\"col-input\" type=\"text\" placeholder=\"Add new dream list\" value={this.state.value} onChange={this.handleChange}/>\n          </label>\n          <input className=\"input-col-btn\" type=\"submit\" value=\"Submit\" />\n        </form>\n      );\n    }\n  }\n  return (\n    <div className=\"container\">\n      <header className=\"display-1\" id=\"title\" >Hacker Dreams</header>\n      <p className=\"lead\">Don't let your dreams be dreams, hackers.</p>\n      <Workspace columns={columns} tickets={tickets}/>\n      <br />\n      <TestPage />\n    </div> )\n}\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}