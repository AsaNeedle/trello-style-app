{"ast":null,"code":"var _jsxFileName = \"/Users/asaneedle/Documents/Coding Projects/my-app/Client/src/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport isEquivalent from './utils/isequivalent';\nimport './Home.css';\nimport TestPage from './TestPage.js';\n\nfunction Home() {\n  const [isPersist, setIsPersist] = useState(false);\n  const [dropColumn, setDropColumn] = useState(false);\n  const [tickets, setTickets] = useState(true);\n  useEffect(() => {\n    console.log(\"hello\");\n    fetch('/tickets').then(res => res.json()).then(response => {\n      setTickets(response);\n    }).catch(err => console.log(err));\n  }, [tickets]);\n  const [columns, setColumns] = useState([{\n    id: 0,\n    title: \"Languages to learn\",\n    tickets: [0, 1, 2, 3]\n  }, {\n    id: 1,\n    title: \"Boroughs to explore\",\n    tickets: [4, 5, 6, 7, 8]\n  }, {\n    id: 2,\n    title: \"Cats to pet\",\n    tickets: [9, 10, 11]\n  }]); // function DisplayInput (props) {\n  //   const displayInput = props.displayInput\n  //   if (displayInput){\n  //     return <TicketForm />\n  //   } else {\n  //     return null\n  //   }\n  // }\n\n  const updatePersistData = data => {\n    return;\n    localStorage.setItem('myData', JSON.stringify(data));\n  };\n\n  const dragStart = e => {\n    e.dataTransfer.setData(\"TicketId\", e.target.id);\n  };\n\n  const dragging = e => {\n    return;\n  };\n\n  const allowDrop = e => {\n    e.preventDefault(); // if (e === dropColumn){\n    //   return\n    // }\n    // const originId = e.dataTransfer.getData(\"OriginId\")\n    // if (e.target.getAttribute(\"class\") === \"column\"){\n    //   if (e.target.id !== originId){\n    //     setDropColumn(e)\n    //   } else {\n    //     setDropColumn(false)\n    //   }\n    // }\n  };\n\n  const drop = e => {\n    e.preventDefault();\n    const ticketId = parseInt(e.dataTransfer.getData(\"TicketId\"));\n    const ticketName = tickets[ticketId].content;\n    const originId = columns.find(x => x.tickets.includes(ticketId))[\"id\"];\n\n    if (e.target.getAttribute(\"class\") === \"column\" && e.target.id != originId) {\n      let newColumns = moveTicket(e.target.id, ticketId, ticketName, columns);\n      setColumns(newColumns);\n      updatePersistData(newColumns);\n    }\n  };\n\n  const moveTicket = (colId, ticketId, val, columns) => {\n    const newColumns = columns.map(col => {\n      // removes ticket from origin\n      if (col.tickets.includes(ticketId)) {\n        let srcCol = {\n          id: col.id,\n          title: col.title,\n          tickets: col.tickets.filter(x => x != ticketId)\n        };\n        return srcCol;\n      } // add ticket to destination\n\n\n      if (col.id == colId) {\n        const destCol = {\n          id: col.id,\n          title: col.title,\n          tickets: [...col.tickets, ticketId]\n        };\n        return destCol;\n      } else {\n        return col;\n      }\n    });\n    return newColumns;\n  };\n\n  const addTicket = (id, val, columns, tickets) => {\n    const newTicketId = tickets.length;\n    const newTickets = [...tickets, {\n      id: newTicketId,\n      content: val,\n      done: false\n    }];\n    const newColumns = columns.map(col => {\n      if (col.id === id) {\n        return {\n          id: col.id,\n          title: col.title,\n          tickets: [...col.tickets, newTicketId]\n        };\n      } else {\n        return col;\n      }\n    });\n    return [newColumns, newTickets];\n  }; // deprecated?\n\n\n  const removeTicket = (origin, val, state) => {\n    const newColumns = state.map(col => {\n      if (col.title === origin) {\n        return {\n          title: col.title,\n          tickets: col.tickets.filter(t => {\n            return t.content !== val;\n          })\n        };\n      } else {\n        return col;\n      }\n    });\n    return newColumns;\n  };\n\n  const removeColumn = id => {\n    const newColumns = columns.filter(column => column.id !== id);\n    setColumns(newColumns);\n    updatePersistData(newColumns);\n  };\n\n  class Ticket extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.toggleDone = () => {\n        this.setState({\n          done: !this.state.done\n        });\n      };\n\n      this.state = {\n        text: props.text,\n        index: props.index,\n        id: props.id,\n        done: false\n      };\n    }\n\n    render() {\n      return React.createElement(\"div\", {\n        className: \"ticket\",\n        name: this.props.column,\n        id: this.state.id,\n        index: this.state.index,\n        draggable: \"true\",\n        onDragStart: dragStart,\n        onDrag: dragging,\n        style: this.state.done ? {\n          textDecoration: \"line-through\"\n        } : {},\n        onClick: this.toggleDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"\\xa0\" + this.state.text);\n    }\n\n  }\n\n  class TicketColumn extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        items: props.items,\n        title: props.title,\n        id: props.id\n      };\n    }\n\n    render() {\n      return React.createElement(\"div\", {\n        className: \"column\",\n        id: this.state.id,\n        onDrop: drop,\n        onDragOver: allowDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"\\xa0\" + this.state.title)), React.createElement(\"button\", {\n        onClick: () => {\n          removeColumn(this.state.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), this.state.items.map((item, i) => {\n        return React.createElement(Ticket, {\n          key: i,\n          column: this.state.id,\n          index: item.id,\n          done: item.done,\n          id: item.id,\n          text: item.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        });\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"^^^Drag here to add!^^^\"), React.createElement(TicketForm, {\n        id: this.state.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  class Workspace extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        columns: props.columns,\n        tickets: props.tickets\n      };\n    }\n\n    componentDidMount() {\n      const persistedData = JSON.parse(localStorage.getItem('myData' || null));\n\n      if (persistedData && !isPersist & !isEquivalent(columns, persistedData)) {\n        setColumns(persistedData);\n        setIsPersist(true);\n      }\n    }\n\n    render() {\n      const {\n        columns\n      } = this.props;\n      const {\n        tickets\n      } = this.props;\n      return React.createElement(\"div\", {\n        className: \"flex-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, columns.map((column, i) => {\n        return React.createElement(TicketColumn, {\n          key: i,\n          items: column.tickets.map(id => tickets[id]),\n          title: column.title,\n          id: column.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        });\n      }), React.createElement(ColumnForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  class TicketForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: '',\n        id: props.id\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n\n    handleSubmit(event) {\n      if (this.state.value !== \"\") {\n        const res = addTicket(this.state.id, this.state.value, columns, tickets);\n        const newColumns = res[0];\n        const newTickets = res[1];\n        setColumns(newColumns);\n        setTickets(newTickets);\n        updatePersistData(newColumns);\n      }\n\n      event.preventDefault();\n    }\n\n    render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"tkt-input\",\n        type: \"text\",\n        placeholder: \"Add new dream :)\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"input-tkt-btn\",\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  class ColumnForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        id: columns.length,\n        value: ''\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n\n    handleSubmit(event) {\n      if (this.state.value !== \"\") {\n        const newColumns = [...columns, {\n          id: this.state.id,\n          title: this.state.value,\n          tickets: []\n        }];\n        setColumns(newColumns);\n      }\n\n      event.preventDefault();\n    }\n\n    render() {\n      return React.createElement(\"form\", {\n        className: \"column\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"col-input\",\n        type: \"text\",\n        placeholder: \"Add new dream list\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"input-col-btn\",\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"display-1\",\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, \"Hacker Dreams\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, \"Don't let your dreams be dreams, hackers.\"), React.createElement(Workspace, {\n    columns: columns,\n    tickets: tickets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }), React.createElement(TestPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/asaneedle/Documents/Coding Projects/my-app/Client/src/Home.js"],"names":["React","useState","useEffect","Button","isEquivalent","TestPage","Home","isPersist","setIsPersist","dropColumn","setDropColumn","tickets","setTickets","console","log","fetch","then","res","json","response","catch","err","columns","setColumns","id","title","updatePersistData","data","localStorage","setItem","JSON","stringify","dragStart","e","dataTransfer","setData","target","dragging","allowDrop","preventDefault","drop","ticketId","parseInt","getData","ticketName","content","originId","find","x","includes","getAttribute","newColumns","moveTicket","colId","val","map","col","srcCol","filter","destCol","addTicket","newTicketId","length","newTickets","done","removeTicket","origin","state","t","removeColumn","column","Ticket","Component","constructor","props","toggleDone","setState","text","index","render","textDecoration","TicketColumn","items","item","i","Workspace","componentDidMount","persistedData","parse","getItem","TicketForm","value","handleChange","bind","handleSubmit","event","ColumnForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport isEquivalent from './utils/isequivalent'\nimport './Home.css';\nimport TestPage from './TestPage.js'\n\nfunction Home() {\n  const [isPersist, setIsPersist] = useState(false)\n  const [dropColumn, setDropColumn] = useState(false)\n  const [tickets, setTickets] = useState(true)\n\n  useEffect(() => {\n    console.log(\"hello\")\n    fetch('/tickets')\n      .then(res => res.json())\n      .then(response => {\n        setTickets(response);\n      })\n      .catch(err => console.log(err));\n  }, [tickets]);\n\n  const [columns, setColumns] = useState([\n    {\n      id: 0,\n      title: \"Languages to learn\",\n      tickets: [0, 1, 2, 3]\n    },\n    {\n      id: 1,\n      title: \"Boroughs to explore\",\n      tickets: [4, 5, 6, 7, 8]\n    },\n    {\n      id: 2,\n      title: \"Cats to pet\",\n      tickets: [9, 10, 11]\n    }\n  ])\n\n\n\n  \n\n\n    \n  // function DisplayInput (props) {\n  //   const displayInput = props.displayInput\n  //   if (displayInput){\n  //     return <TicketForm />\n  //   } else {\n  //     return null\n  //   }\n  // }\n\n\n  const updatePersistData = (data) => {\n    return\n    localStorage.setItem('myData', JSON.stringify(data))\n  }\n\n  const dragStart = (e) => {\n    e.dataTransfer.setData(\"TicketId\", e.target.id)\n  }\n  const dragging = (e) => {\n    return\n  }\n  const allowDrop = (e) => { \n    e.preventDefault();\n    // if (e === dropColumn){\n    //   return\n    // }\n    // const originId = e.dataTransfer.getData(\"OriginId\")\n    // if (e.target.getAttribute(\"class\") === \"column\"){\n    //   if (e.target.id !== originId){\n    //     setDropColumn(e)\n    //   } else {\n    //     setDropColumn(false)\n    //   }\n    // }\n  }\n\n  const drop = (e) => {\n    e.preventDefault();\n    const ticketId = parseInt(e.dataTransfer.getData(\"TicketId\"))\n    const ticketName = tickets[ticketId].content\n    const originId = columns.find(x => x.tickets.includes(ticketId))[\"id\"]\n    if (e.target.getAttribute(\"class\") === \"column\" && e.target.id != originId){ \n      let newColumns = moveTicket(e.target.id, ticketId, ticketName, columns)\n      setColumns(newColumns)\n      updatePersistData(newColumns)\n    }\n  }\n\n  const moveTicket = (colId, ticketId, val, columns) => {\n    const newColumns = columns.map((col) => {\n      // removes ticket from origin\n      if (col.tickets.includes(ticketId)){\n        let srcCol = {\n          id: col.id,\n          title: col.title,\n          tickets: col.tickets.filter(x => x != ticketId)\n        }\n        return srcCol\n      }\n      // add ticket to destination\n      if (col.id == colId) {\n        const destCol = {\n          id: col.id,\n          title: col.title, \n          tickets: [...col.tickets, ticketId]\n        }\n        return destCol\n      } else {\n        return col\n      }\n    });\n    return newColumns\n  }\n\n  const addTicket = (id, val, columns, tickets) => {\n    const newTicketId = tickets.length\n    const newTickets = [...tickets, {id: newTicketId, content: val, done: false}]\n    const newColumns = columns.map((col) => {\n      if (col.id === id) {\n        return {\n                id: col.id,\n                title: col.title, \n                tickets: [...col.tickets, newTicketId]\n              }   \n      } else {\n        return col\n      }\n    });\n    return [newColumns, newTickets]\n  }\n\n// deprecated?\n  const removeTicket = (origin, val, state) => {\n    const newColumns = state.map((col) => {\n      if (col.title === origin) {\n        return {\n                title: col.title, \n                tickets: col.tickets.filter((t) => {\n                  return t.content !== val\n                })\n              }   \n      } else {\n        return col\n      }\n    });\n    return newColumns\n  }\n\n  const removeColumn = (id) => {\n    const newColumns = columns.filter((column) => column.id !== id);\n    setColumns(newColumns)\n    updatePersistData(newColumns)\n  }\n\n  class Ticket extends React.Component {\n    constructor(props){\n      super(props)\n      this.state={\n        text: props.text,\n        index: props.index,\n        id: props.id,\n        done: false\n      }\n    }\n\n    toggleDone = () => {\n      this.setState({done: !this.state.done}) \n    }\n\n    render(){\n      return (\n        <div className=\"ticket\"\n             name={this.props.column}\n             id={this.state.id}\n             index={this.state.index}\n             draggable=\"true\"\n             onDragStart={dragStart}\n             onDrag={dragging}\n             style={this.state.done ? { textDecoration: \"line-through\" } : {}} onClick={this.toggleDone}>\n          {\"\\xa0\" + this.state.text} \n        </div>\n      )\n    }\n  }\n\n  class TicketColumn extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {items: props.items, title: props.title, id: props.id}\n    }\n    render(){\n      return (\n        <div className=\"column\"\n             id={this.state.id}\n             onDrop={drop}\n             onDragOver={allowDrop}>\n        <header><b>{\"\\xa0\" + this.state.title}</b></header>\n        <button onClick={() => {removeColumn(this.state.id)}}>X</button>\n        <br/>\n        {this.state.items.map((item, i) => { \n          return <Ticket key={i} column={this.state.id} \n                                 index={item.id} \n                                 done={item.done} \n                                 id={item.id}\n                                 text={item.content}/>\n        })}\n        <br/>\n        <br/>\n        <br/>\n        <div>^^^Drag here to add!^^^</div>\n        <TicketForm id={this.state.id}/>\n        </div>\n      )\n    }\n  }\n\n  class Workspace extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {columns: props.columns, tickets: props.tickets}\n    }\n    componentDidMount(){\n      const persistedData = JSON.parse(localStorage.getItem('myData' || null))\n      if (persistedData && !isPersist & !isEquivalent(columns, persistedData)){\n        setColumns(persistedData)\n        setIsPersist(true)\n      }\n    }\n    render(){\n      const { columns } = this.props\n      const { tickets } = this.props\n      return(\n        <div className=\"flex-container\">\n        { columns.map((column, i) => {\n            return <TicketColumn key={i} \n                                 items={column.tickets.map((id) => tickets[id])} \n                                 title={column.title} \n                                 id={column.id}/>\n          })\n        }\n        <ColumnForm />\n        </div>\n      )\n    }\n  }\n\n  class TicketForm extends React.Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {value: '', id: props.id}\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n      this.setState({value: event.target.value})\n    }\n\n    handleSubmit(event){\n      if (this.state.value !== \"\"){\n        const res = addTicket(this.state.id, this.state.value, columns, tickets)\n        const newColumns = res[0]\n        const newTickets = res[1]\n        setColumns(newColumns)\n        setTickets(newTickets)\n        updatePersistData(newColumns)\n      } \n      event.preventDefault();\n    }\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <input className=\"tkt-input\" type=\"text\" placeholder=\"Add new dream :)\" value={this.state.value} onChange={this.handleChange}/>\n          </label>\n          <input className=\"input-tkt-btn\"type=\"submit\" value=\"Submit\" />\n        </form>\n      );\n    }\n  }\n\n  class ColumnForm extends React.Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {id: columns.length, value: ''}\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n      this.setState({value: event.target.value})\n    }\n\n    handleSubmit(event){\n      if (this.state.value !== \"\"){\n        const newColumns = [...columns, {\n          id: this.state.id,\n          title: this.state.value,\n          tickets: []\n        }]\n        setColumns(newColumns);\n      }\n      event.preventDefault();\n    }\n\n    render() {\n      return (\n        <form className=\"column\" onSubmit={this.handleSubmit}>\n          <label>\n            <input className=\"col-input\" type=\"text\" placeholder=\"Add new dream list\" value={this.state.value} onChange={this.handleChange}/>\n          </label>\n          <input className=\"input-col-btn\" type=\"submit\" value=\"Submit\" />\n        </form>\n      );\n    }\n  }\n  return (\n    <div className=\"container\">\n      <header className=\"display-1\" id=\"title\" >Hacker Dreams</header>\n      <p className=\"lead\">Don't let your dreams be dreams, hackers.</p>\n      <Workspace columns={columns} tickets={tickets}/>\n      <br />\n      <TestPage />\n    </div> )\n}\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}